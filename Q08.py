# Project Euler - Question 8

# Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. 
# What is the value of this product?

import time

start = time.time()

num = '''
        7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843
        85861560789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576
        68966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930
        35890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657
        27333001053367881220235421809751254540594752243525849077116705560136048395864467063244157221553975369
        78179778461740649551492908625693219784686224828397224137565705605749026140797296865241453510047482166
        37048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664
        58359124566529476545682848912883142607690042242190226710556263211111093705442175069416589604080719840
        38509624554443629812309878799272442849091888458015616609791913387549920052406368991256071760605886116
        46710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
      '''

n = 13
ans = 0
seq = []

for i in range(len(num)):
    prod = 1
    string = num[i : i + n]

    for x in string:
        prod *= int(x)

    if prod > ans:
        ans = prod
        seq.append(string)

print('Adjacent digits:', [int(d) for d in str(seq[-1])])
print('Product:', ans)
print('Time elapsed:', (time.time() - start), 'seconds')
